class Solution {
    public int coinChange(int[] coins, int amount) {
        int n = coins.length;
        int[][] dp = new int[n][amount + 1];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j <= amount; j++) {
                if (j % coins[i] == 0) {
                    dp[i][j] = j / coins[i];
                } else {
                    dp[i][j] = Integer.MAX_VALUE;
                }
            }
        }

        for (int ind = 1; ind < n; ind++) {
            for (int t = 0; t <= amount; t++) {
                int nottake = dp[ind - 1][t];
                int take = Integer.MAX_VALUE;
                if (coins[ind] <= t) {
                    int subProblem = dp[ind][t - coins[ind]];
                    if (subProblem != Integer.MAX_VALUE) {
                        take = 1 + subProblem;
                    }
                }
                dp[ind][t] = Math.min(take, nottake);
            }
        }

        int ans = dp[n - 1][amount];
        if (ans >= Integer.MAX_VALUE) {
            return -1;
        } else {
            return ans;
        }
    }
}
