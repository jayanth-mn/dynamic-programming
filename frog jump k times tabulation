public class Solution {
     
    public static int minimizeCost(int n, int k, int []heights){
        // Write your code here.
         if (n == 1) {
            return 0; // No energy needed
        }
       int dp[] = new int[n+1];
       for (int i=0; i<=n; i++){
           dp[i]=-1;
       }
       dp[0] =0;
       
       for ( int i=1; i<n; i++){
           int mini = Integer.MAX_VALUE;
           for (int j=1; j<=k; j++){
               if (i-j >=0){
                int eng = Math.abs(heights[i] - heights[i-j]); 
            
            int f1 = dp[i-j] + eng;
            
            mini = Math.min(mini,f1) ;
            }
           }
           dp[i] = mini;
       }
        return dp[n-1];
    }
}
